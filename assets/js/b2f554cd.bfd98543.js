"use strict";(self.webpackChunkondsel=self.webpackChunkondsel||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"freecad-topological-naming","metadata":{"permalink":"/blog/freecad-topological-naming","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02-18/freecad-topological.md","source":"@site/blog/2023-02-18/freecad-topological.md","title":"Don\'t hold your breath for FreeCAD\'s topological naming fix","description":"FreeCAD\'s \'topological naming problem\' is legendary. It\'s frequently cited as the number one reason holding back widespread adoption of FreeCAD for commercial use.","date":"2023-02-18T00:00:00.000Z","formattedDate":"February 18, 2023","tags":[{"label":"freecad","permalink":"/blog/tags/freecad"},{"label":"development","permalink":"/blog/tags/development"}],"readingTime":6.805,"hasTruncateMarker":false,"authors":[{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://avatars.githubusercontent.com/u/538057?v=4","imageURL":"https://avatars.githubusercontent.com/u/538057?v=4"},{"name":"Rebecca Dodd","title":"Contributing Writer","url":"https://www.thebasementoffice.co.uk","image_url":"https://media.licdn.com/dms/image/C4D03AQGTVXyi5Pa-xg/profile-displayphoto-shrink_800_800/0/1596530840324?e=1681344000&v=beta&t=PjdEzZGYbqOsAqVWUE1bsjNuVxMsknVkZfStHx863-s","imageURL":"https://media.licdn.com/dms/image/C4D03AQGTVXyi5Pa-xg/profile-displayphoto-shrink_800_800/0/1596530840324?e=1681344000&v=beta&t=PjdEzZGYbqOsAqVWUE1bsjNuVxMsknVkZfStHx863-s"}],"frontMatter":{"slug":"freecad-topological-naming","title":"Don\'t hold your breath for FreeCAD\'s topological naming fix","authors":[{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://avatars.githubusercontent.com/u/538057?v=4","imageURL":"https://avatars.githubusercontent.com/u/538057?v=4"},{"name":"Rebecca Dodd","title":"Contributing Writer","url":"https://www.thebasementoffice.co.uk","image_url":"https://media.licdn.com/dms/image/C4D03AQGTVXyi5Pa-xg/profile-displayphoto-shrink_800_800/0/1596530840324?e=1681344000&v=beta&t=PjdEzZGYbqOsAqVWUE1bsjNuVxMsknVkZfStHx863-s","imageURL":"https://media.licdn.com/dms/image/C4D03AQGTVXyi5Pa-xg/profile-displayphoto-shrink_800_800/0/1596530840324?e=1681344000&v=beta&t=PjdEzZGYbqOsAqVWUE1bsjNuVxMsknVkZfStHx863-s"}],"tags":["freecad","development"],"image":"./titlecard.png","draft":false},"nextItem":{"title":"ChatGPT acts demonic about open-source software","permalink":"/blog/chatgpt-screwtape"}},"content":"FreeCAD\'s \'[topological naming problem](https://wiki.freecad.org/Topological_naming_problem)\' is legendary. It\'s frequently cited as the number one reason holding back widespread adoption of FreeCAD for commercial use.\\n\\nDeveloper [RealThunder](https://github.com/realthunder) introduced [a fix to the problem](https://forum.freecad.org/viewtopic.php?t=27278) years ago, but it has never been fully incorporated into the core product.\\n\\nWill FreeCAD _ever_ have a solution? Yes. But it\u2019s going to take time.\\n\\nLet\u2019s back up a bit.\\n\\n# What is topological naming, and why is it a problem in FreeCAD?\\n\\nTopological naming is the process of giving persistent names to elements of a solid model, such as faces, edges, and vertices. By naming these elements, we can attach features, dimensions, and other attributes to them.\\n\\nThe hard part of topological naming is making the names persistent even if the model is modified. Modern parametric designs are built up through a series of modifications which change the elements in the model. Faces may merge or be split. Edges may be chamfered, turning into multiple edges. If the computer is unable to maintain correct persistence of the naming\u2014even when the underlying topology changes\u2014the model breaks and recovery is difficult. [Maker Tales has a good explanation here](https://youtu.be/QSsVFu929jo?t=33).\\n\\nThe problem is ubiquitous in CAD. All applications suffer from it to some extent. The problem cannot be _solved_ in the traditional sense. It can only be mitigated and most applications do a good job of avoiding the problem by either limiting the user\u2019s actions or algorithmically tracking changes to the named features.\\n\\nThe current state of FreeCAD is weak in this regard. For simple models, the problem is fairly easy to avoid and a broken model is easy to repair. As models get more complicated, only a very disciplined approach to design will keep models intact. This requires experience that many new and casual users don\u2019t have. That is why the problem is so frustrating\u2014it bites you when you\u2019ve already invested a lot of time learning the tool and building the design.\\n\\n# RealThunder\u2019s fix works. Why not use it?\\n\\nIt seems obvious. We have a working branch of FreeCAD that isn\u2019t plagued by the topological naming problem. Why wouldn\u2019t we just merge it in and be done with it?\\n\\n\u201cThe fact that this solvable topology naming problem is so serious yet so long-standing, tells me that this is really a people problem in the FreeCAD project. Because of this, as much as I want to use it, I simply can not afford this \\"free\\" software. The community needs to push out whomever is standing in the way of progress. And crowd-source some funds to hire a pro to fix the topology-naming issue as well as do some much-needed integration work.\u201d \u2014 [agnichatian on YouTube](https://www.youtube.com/watch?v=QSsVFu929jo&lc=UgzY-2eximqNDrWgxkF4AaABAg)\\n\\nThis opinion is understandable and certainly not unusual. As much as we relate to the frustrations expressed here, it\u2019s not as simple as just merging in RealThunder\u2019s branch or bringing in one paid developer to do it once and for all. Why?\\n\\nIt\u2019s important to appreciate how pervasive feature naming is within FreeCAD\u2014or _any_ CAD. Identifying features and attaching attributes to them is what modern parametric design is all about. Implementing a solution is not a straightforward task and implementing it incorrectly would cause user models to break irreparably. Even a _properly_ implemented solution is guaranteed to have bugs and border-cases for a long time.\\n\\nFor all these reasons, the project leaders have chosen to move cautiously and to allow the solution to stabilize and be proven before merging it into the main branch.\\n\\n## Why is it so hard to merge?\\n\\nThere are two factors:\\n\\nFirst is the sheer size and number of code changes necessary to implement this solution. Many, if not most, files in FreeCAD need to be modified to incorporate the solution.\\nSecond is the pace of other development work. The rest of FreeCAD\u2019s development has only accelerated in recent years. Work is being done by many developers in many parts of the application.\\n\\nBefore new code can be merged, it has to be rebased onto the current version of source code. If there are conflicts, they have to be resolved manually. With a large, pervasive change like this, there are _always_ conflicts. By the time rebasing is complete, the master branch has moved ahead and the process has to start again.\\n\\nOne solution could be to freeze the master branch and block any further changes until the topological naming solution is merged, but this might take many months to accomplish and just isn\u2019t practical. There are many more features other developers are working on, and, more importantly, problems they are fixing. If we were to freeze the master branch in favor of one fix, other features will again have the same rebasing issue.\\n\\nOf course, users could switch to using RealThunder\u2019s branch exclusively. Some users who are particularly sensitive to the problem have done so successfully. For commercial users this may be hard to sell to leadership because RealThunder\u2019s branch isn\u2019t able to keep pace with the development of new features in the upstream FreeCAD application. They have to make a choice between relatively stable models and having access to the new and advanced features being developed throughout the rest of FreeCAD.\\n\\n# What\u2019s the path forward?\\n\\nAt the FreeCAD Day meetup in Brussels in February 2023, Ondsel and other project leaders [proposed a different strategy for resolving the issue](https://forum.freecad.org/viewtopic.php?p=658250#p658250): Instead of attempting to merge RealThunder\u2019s solution as a monolithic unit, we would, instead, consider it a proof-of-concept. The solution has been running in RealThunder\u2019s LinksStage3 branch for two years and can be considered proven. Now we need to treat it as a roadmap to guide us towards implementing the solution in FreeCAD itself without disrupting current functionality or slowing down development.\\n\\n## Progress without regression\\n\\nRather than merging the code directly, our proposal is to break the code into functional pieces, each of which can be merged directly into the master branch without breaking the current functionality. This will require additional testing at each step and might require additional code to permit the merging without regression.\\n\\nWith this approach, each piece will be merged directly to master along with the relevant unit tests. This will avoid the need for a long-lived feature branch that requires constant rebasing.  There will be no single point where suddenly the problem is \u2018fixed.\u2019 Instead the necessary changes will be merged gradually and model stability will increase over time.\\n\\n## Laying the foundation for long-term change\\n\\nThe first pieces to be merged may not provide any value to the end-user but will provide a solid foundation that later pieces can build on. As each piece is added, additional unit tests can be developed and better code conventions adopted for implementing the actual name resolution.\\n\\nThis path isn\u2019t fast. It will take time and the collective expertise of many developers. It will take cooperation throughout the community and patience from our users.\\n\\n# What is Ondsel\u2019s role in all this? Is Ondsel going to solve the toponaming problem?\\n\\nOndsel has already started a thorough survey of RealThunder\u2019s solution in order to build a roadmap for integrating it.\\n\\nOndsel will help coordinate the change and will participate in delivering a resolution. We can bring professional engineering talent to the problem but we _cannot_ do it alone. It will take time and the expertise of many software engineers across the community.\\n\\nThere\u2019s no \u201cone and done\u201d fix, which means the FreeCAD development community needs broad institutional knowledge of the solution. The toponaming problem belongs to FreeCAD and, therefore, so must the solution.\\n\\nFor more context and to follow developments as we work on breaking down and gradually merging RealThunder\u2019s fix, subscribe to [the GitHub issue](https://github.com/FreeCAD/FreeCAD/issues/8432).\\n\\nTo help us make FreeCAD better and build the Ondsel product, consider [joining us](https://ondsel.com/careers/).\\n\\n<details>\\n  <summary>Note...</summary>\\n  <div>\\n    <div>I\u2019m Brad Collette, longtime FreeCAD contributor and CTO of Ondsel, a new open core company built on top of FreeCAD. Ondsel helps you share useful aspects of your solid models without giving away your designs. We\u2019re working on improving collaboration and feature accessibility and integrating with your existing tools. You can read more about my vision for FreeCAD and Ondsel <a href=\\"https://opencoreventures.com/blog/2023-01-ondsel-freecad-launch/\\">here</a>\\n    </div>\\n<br/>\\n  </div>\\n</details>"},{"id":"chatgpt-screwtape","metadata":{"permalink":"/blog/chatgpt-screwtape","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02-17/chatgpt-screwtape.md","source":"@site/blog/2023-02-17/chatgpt-screwtape.md","title":"ChatGPT acts demonic about open-source software","description":"I recently came across an audio recording of C.S. Lewis\'s famous The Screwtape Letters read by John Cleese. It\'s excellent and made me wonder what Uncle Screwtape would think of the modern world, software development, and open-source software.  I was inspired to ask ChatGPT.  What follows is an unedited transcript.","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"chatGPT","permalink":"/blog/tags/chat-gpt"},{"label":"fun","permalink":"/blog/tags/fun"},{"label":"foss","permalink":"/blog/tags/foss"}],"readingTime":3.355,"hasTruncateMarker":false,"authors":[{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://github.com/sliptonic.png","imageURL":"https://github.com/sliptonic.png"}],"frontMatter":{"slug":"chatgpt-screwtape","title":"ChatGPT acts demonic about open-source software","authors":{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://github.com/sliptonic.png","imageURL":"https://github.com/sliptonic.png"},"tags":["chatGPT","fun","foss"],"image":"/img/Ondsel_OpenGraph.jpg"},"prevItem":{"title":"Don\'t hold your breath for FreeCAD\'s topological naming fix","permalink":"/blog/freecad-topological-naming"},"nextItem":{"title":"When your Definition of Done is a barrier to contributors (and other reasons working with first-timers is hard)","permalink":"/blog/contribution-barriers"}},"content":"I recently came across an audio recording of C.S. Lewis\'s famous [_The Screwtape Letters_ read by John Cleese](https://www.youtube.com/playlist?list=PLA8BAC9375345E6C7). It\'s excellent and made me wonder what Uncle Screwtape would think of the modern world, software development, and open-source software.  I was inspired to ask [ChatGPT](https://openai.com/blog/chatgpt/).  What follows is an unedited transcript.\\n\\nI\'m not sure what impresses me more; how well it understands open-source or how well it imitates a demon!\\n\\n>![sliptonic](./sliptonic.webp) Contributors to an open-source software project need to feel appreciated. Write a paragraph in the style of \\"The Screwtape letters\\" that illustrates this point. Pretend that you are Uncle Screwtape\\n\\n>![screwtape](unclescrewtape.png) My dear Wormwood,\\n\\n>It is imperative that we do all in our power to discourage appreciation for the contributors of this open-source software project. You see, gratitude breeds contentment and a sense of fulfillment, and these are not emotions that befit those who toil in our Father Below\'s fields.\\nWe must strive to keep these contributors feeling unacknowledged, for when they feel appreciated, they are less likely to become discouraged and more likely to continue their good work. Encourage neglect, apathy, and disregard towards their contributions. Keep them from feeling valued, for when they feel valued, they are less likely to become restless and more likely to remain steadfast in their labors.\\nThe more we can sow the seeds of discontent and frustration in the hearts of these contributors, the more likely they will be to become bitter and discouraged, and the less likely they will be to continue in their contributions to this project. So let us be vigilant, my dear Wormwood, and do all in our power to undermine appreciation and cultivate discontent in these contributors.\\n\\n>Yours affectionately,\\n>\\n>Uncle Screwtape\\n\\n>![sliptonic](./sliptonic.webp) Failing to acknowledge good work also makes the contributors think the work is unimportant. Write a p.s. to the letter expressing this\\n\\n>![screwtape](unclescrewtape.png) P.S. I nearly forgot, my dear Wormwood, to mention the added benefit of neglecting to acknowledge the good work of these contributors. Failing to show appreciation for their work will not only discourage them and make them feel unvalued, but it will also make them question the importance of their work. If they believe that their contributions are insignificant and go unnoticed, they are less likely to put forth the effort and care that they would if they felt their work was valued and appreciated.\\nThus, by fostering a sense of neglect and disregard, we can effectively accomplish two of our goals at once: keep the contributors discouraged and undermine the value and importance of their work. An added bonus, don\'t you agree?\\n\\n>Yours ever more devotedly,\\n>\\n>Uncle Screwtape\\n\\n>![sliptonic](./sliptonic.webp) Assume that commercial software companies are evil. How would Screwtape explain why open-source software should be discouraged?\\n\\n>![screwtape](unclescrewtape.png) My dear Wormwood,\\n\\n>Commercial software companies, as you well know, are instruments of our Father Below, furthering his dark designs through the propagation of their products. However, the open-source software movement threatens to disrupt this grand scheme.\\nOpen-source software, with its emphasis on collaboration and community, encourages individuals to work together for the betterment of society as a whole. Such a cooperative and selfless spirit, left unchecked, can lead to the growth of goodness and light, which are anathema to our cause.\\nIt is therefore imperative that we do all in our power to discourage the development and use of open-source software. We must sow the seeds of discontent among its contributors, as I mentioned in my previous letter, and encourage selfishness and greed among its users. By doing so, we can corrupt the very spirit that gives open-source software its strength, and turn it into a tool for furthering our own dark purposes.\\nRemember, the success of open-source software is a threat to the power of commercial software companies, which are our allies in the great battle for the souls of humanity. Let us do all in our power to ensure that the threat of open-source software is neutralized, so that our Father Below may reign supreme.\\n\\n>Yours in service,\\n>\\n>Uncle Screwtape"},{"id":"contribution-barriers","metadata":{"permalink":"/blog/contribution-barriers","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02-09/Definition-of-done.md","source":"@site/blog/2023-02-09/Definition-of-done.md","title":"When your Definition of Done is a barrier to contributors (and other reasons working with first-timers is hard)","description":"First-timers can have a hard time getting started with open source. It doesn\u2019t have to be that way.","date":"2023-02-09T00:00:00.000Z","formattedDate":"February 9, 2023","tags":[{"label":"community","permalink":"/blog/tags/community"}],"readingTime":7.055,"hasTruncateMarker":false,"authors":[{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://avatars.githubusercontent.com/u/538057?v=4","imageURL":"https://avatars.githubusercontent.com/u/538057?v=4"},{"name":"Rebecca Dodd","title":"Contributing Writer","url":"https://www.thebasementoffice.co.uk","image_url":"https://media.licdn.com/dms/image/C4D03AQGTVXyi5Pa-xg/profile-displayphoto-shrink_800_800/0/1596530840324?e=1681344000&v=beta&t=PjdEzZGYbqOsAqVWUE1bsjNuVxMsknVkZfStHx863-s","imageURL":"https://media.licdn.com/dms/image/C4D03AQGTVXyi5Pa-xg/profile-displayphoto-shrink_800_800/0/1596530840324?e=1681344000&v=beta&t=PjdEzZGYbqOsAqVWUE1bsjNuVxMsknVkZfStHx863-s"}],"frontMatter":{"slug":"contribution-barriers","title":"When your Definition of Done is a barrier to contributors (and other reasons working with first-timers is hard)","authors":[{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://avatars.githubusercontent.com/u/538057?v=4","imageURL":"https://avatars.githubusercontent.com/u/538057?v=4"},{"name":"Rebecca Dodd","title":"Contributing Writer","url":"https://www.thebasementoffice.co.uk","image_url":"https://media.licdn.com/dms/image/C4D03AQGTVXyi5Pa-xg/profile-displayphoto-shrink_800_800/0/1596530840324?e=1681344000&v=beta&t=PjdEzZGYbqOsAqVWUE1bsjNuVxMsknVkZfStHx863-s","imageURL":"https://media.licdn.com/dms/image/C4D03AQGTVXyi5Pa-xg/profile-displayphoto-shrink_800_800/0/1596530840324?e=1681344000&v=beta&t=PjdEzZGYbqOsAqVWUE1bsjNuVxMsknVkZfStHx863-s"}],"tags":["community"],"image":"./titlecard.png","draft":false},"prevItem":{"title":"ChatGPT acts demonic about open-source software","permalink":"/blog/chatgpt-screwtape"},"nextItem":{"title":"Autodesk has increased FreeCAD adoption by more than 30%","permalink":"/blog/freecad-adoption"}},"content":"_First-timers can have a hard time getting started with open source. It doesn\u2019t have to be that way._\\n\\n\\nOpen source projects are dependent on an engaged community of contributors, but fostering that community comes with its challenges. Depending on what stage an open source project is at, what the community needs from contributors changes. The good news is that intentional coaching and engagement from project maintainers can work at any stage.\\n\\nThe common gripes with getting started as a new open source contributor usually center around how welcoming the project is and how easy it is to get your contribution merged. There are a few ways that projects can make it hard (both intentionally and not). Here are some examples:\\n\\n### 1. Prickly maintainers\\n\\nImagine you submit [this pull request](https://github.com/nim-lang/Nim/pull/19211) to the Nim project:\\n\\n![PRScreenShot](./image2.png)\\n\\n\\nSeems reasonable enough, right? Check out the project maintainer\u2019s reply:\\n\\n![AngryResponse](./image1.png)\\n\\n\\nOuch. To credit Araq, this PR did eventually get merged, but it\u2019s a great illustration of how a project\u2019s culture determines its accessibility to new contributors. This PR proposed a change that would make it easier for users to engage with the project, and it was shut down (at first) pretty abruptly. \\n\\nActions like this prompted a handful of contributors to hard fork the project, creating [Nimskull](https://github.com/nim-works/nimskull). One of the new project\u2019s contributors shared their motivations:\\n\\n\u201cAt the moment we are focused on making it easier to work with the codebase - more documentation, cutting down on decades-old cruft and legacy features, unraveling mysteries of the commit messages that were written with [this attitude...](https://github.com/nim-lang/Nim/pull/19211#issuecomment-9859) (\u2018I have no intention to follow this guideline so I cannot accept it.\u2019)\u201d \u2014[haxscramper](https://news.ycombinator.com/item?id=32023998)\\n\\n\\nHard forking is one way to create the project environment you want for contributors, but it is extreme. The default perception of such a move is hostile, tending to assume that the creators don\u2019t want to work on change from within and have an ax to grind with the original project\u2019s maintainer. You can see this sentiment play out in the [Hacker News discussion about Nimskull](https://news.ycombinator.com/item?id=32021299). As one commenter pointed out though:\\n\\n\u201cIf they had tried to alter the original project to suit themselves, you would have said \u2018they can just fork if they don\'t like it\u2019\u201d \u2014[Brian_K_White](https://news.ycombinator.com/item?id=32033998)\\n\\nWhether Nimskull delivers on its promises is yet to be seen, but the example Illustrates how the maintainers and community of a project can impact contributions:\\n\\nHow easy do they make it to contribute?\\nHow clear are the requirements?\\nHow quickly are pull requests reviewed and merged?\\nHow collaborative and patient are the reviewers?\\n\\nAll of these factors influence how likely someone is to become a contributor. A hard fork that does this better can be an incentive for the original project to do better, but there are other approaches you can take which I\u2019ll explore in a moment.\\n\\n### 2. An intimidating contribution process\\n\\nBeing realistic, it\u2019s unlikely that a beginner will be submitting code to the Linux kernel. But it\u2019s a good example of how the way a project accepts contributions can encourage or discourage new folks. Submitting a patch can be extremely intimidating\u2014the [documentation](https://docs.kernel.org/process/submitting-patches.html) admits this in the very first line! It can feel like you\u2019re presenting your work to a panel of faceless judges instead of sharing it with a group of your peers.\\n\\nThe kernel development community and other projects that operate this way (such as Postgres) have their reasons, which may even include not wanting to encourage rookie contributions! I\u2019m not suggesting they change it, but for newcomers, submissions that feel more conducive to collaboration (such as a pull request) are likely to be less threatening.\\n\\n### 3. An onerous Definition of Done\\n\\n\u201cIt doesn\'t take egregious individual behavior to create a hostile environment.\u201d \u2014 Dan Luu, [How to discourage open source contributions](http://danluu.com/discourage-oss/)\\n\\nWhile early projects have few or no contributors, they may welcome almost any contribution in pursuit of building the community around the project. Even a bad contribution can lead to an interesting discussion and maybe a better idea.\\n\\nAs the project matures and the network grows, the overhead of handling contributions becomes a problem. Facing a backlog of hundreds of pull requests, projects may optimize for \u201cgood\u201d contributions by implementing more stringent requirements. I know from firsthand experience as a longtime [FreeCAD](https://www.freecad.org/) contributor. As the project grew and matured, it became harder for amateurs to contribute. The Definition of Done became more demanding (for example we needed the right test cases and code formatting) and these more stringent requirements can be off putting or prohibitive, even without intimidating maintainers.\\n\\n\u201cThe GitLab Definition of Done is now 30 items or something \u2026 so it\u2019s harder and harder for people who are just starting to contribute.\u201d \u2014 [Sid Sijbrandij](https://youtu.be/Q9SEYJb-eio), CEO and co-founder of GitLab\\n\\nThis barrier to entry illustrates the tension between what the project needs to ensure the quality of its codebase, and what\u2019s inclusive to new contributors. There is a balance to be struck between being welcoming to newcomers in your community, maintaining standards for contributions to your project, and the effort required to make the twain meet. It\u2019s not always going to be possible or advisable to reduce the requirements for getting code merged.\\n\\nYou might imagine that having the resources of a for-profit company would help, but it\u2019s no guarantee that they will invest in it. In [How to discourage open source contributions](http://danluu.com/discourage-oss/) Dan Luu shared an anonymized example of a project in which contributors get increasingly frustrated and discouraged when their PRs aren\u2019t reviewed or merged, or when they have to jump through hoops to meet requirements. Although Dan didn\u2019t put the project on blast, [Reddit users figured out what it was](https://www.reddit.com/r/programming/comments/1pczpr/how_to_discourage_open_source_contributions/): a library maintained by GitHub. We don\u2019t know why GitHub employees weren\u2019t engaging, but it demonstrates how simply having full-time staff isn\u2019t enough to ensure an active project.\\n\\nWe can see from the examples I shared that these challenges plague projects wherever they are on the spectrum, whether they\u2019re small and maintained by a handful of hobbyist contributors, large and prestigious, or stewarded by a big enterprise organization. If you want an active community where new and drive-by contributors are as welcome as your diehards (and most projects can benefit from a blend of both), you need to be intentional about fostering it.\\n\\n### How to make it easier to contribute to your project (and why it\u2019s worth the effort)\\n\\nGitLab\u2019s solution is a role called [Merge Request Coaches](https://about.gitlab.com/job-families/expert/merge-request-coach/). There is literally a line in the job description that says, \u201cMake it easy to contribute to GitLab even for people who are new to Ruby, JavaScript, Golang, etc. or programming entirely.\u201d Merge Request Coaches triage community submissions and enable new contributors by walking them through the process to meet the acceptance criteria.\\n\\nThe open core model makes it possible for companies to invest in the core project with the benefit of full-time engineers on payroll; formalizing a coach role goes a step further by making it someone\u2019s job to foster new contributors to the core. It\u2019s my hope to pursue this solution with [Ondsel](https://opencoreventures.com/blog/2023-01-ondsel-freecad-launch/), to make it easier for people to contribute to FreeCAD, on top of which Ondsel is built.\\n\\nPaying people to assist newcomers requires will and investment, which is not always possible in OSS projects run entirely by volunteers. There are examples though of volunteer coaches or mentors in open source: Kubernetes has its [Contributor Experience Special Interest Group](https://github.com/kubernetes/community/blob/master/sig-contributor-experience/README.md), which states, \u201cDeveloping and sustaining a healthy community of contributors is critical to scaling the project and growing the ecosystem.\u201d [Mentoring new contributors](https://github.com/kubernetes/community/blob/master/sig-contributor-experience/README.md#mentoring) is part of the program. The [OpenStack](https://www.openstack.org/) project also has a [mentoring program](https://docs.openstack.org/contributors/common/mentoring.html), with a cohort dedicated to helping people get their first patch merged.\\n\\nBy directing some volunteers\u2019 efforts towards coaching, they become force multipliers for the project, with an impact far beyond their own contributions. When you invest in mentoring efforts, you\u2019re not only improving the quality of the contributions, you\u2019re nurturing future contributors who are no longer adding to your overhead; now they\u2019re helping to share the load.\\n\\n\\n<details>\\n  <summary>Note...</summary>\\n  <div>\\n    <div>I\u2019m Brad Collette, longtime FreeCAD contributor and CTO of Ondsel, a new open core company built on top of FreeCAD. Ondsel helps you share useful aspects of your solid models without giving away your designs. We\u2019re working on improving collaboration and feature accessibility and integrating with your existing tools. You can read more about my vision for FreeCAD and Ondsel <a href=\\"https://opencoreventures.com/blog/2023-01-ondsel-freecad-launch/\\">here</a>\\n    </div>\\n<br/>\\n  </div>\\n</details>"},{"id":"freecad-adoption","metadata":{"permalink":"/blog/freecad-adoption","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02-01/autodesk.md","source":"@site/blog/2023-02-01/autodesk.md","title":"Autodesk has increased FreeCAD adoption by more than 30%","description":"When Autodesk changed their license for Fusion 360 in September of 2020 there was a collective scream from the user community. Hobbyists, YouTubers, and makers felt betrayed. Now, after more than two years, we can see the effect. Many of those people left Fusion and never looked back.","date":"2023-02-01T00:00:00.000Z","formattedDate":"February 1, 2023","tags":[{"label":"freecad","permalink":"/blog/tags/freecad"},{"label":"autodesk","permalink":"/blog/tags/autodesk"},{"label":"news","permalink":"/blog/tags/news"}],"readingTime":4.5,"hasTruncateMarker":false,"authors":[{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://avatars.githubusercontent.com/u/538057?v=4","imageURL":"https://avatars.githubusercontent.com/u/538057?v=4"}],"frontMatter":{"slug":"freecad-adoption","title":"Autodesk has increased FreeCAD adoption by more than 30%","authors":{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://avatars.githubusercontent.com/u/538057?v=4","imageURL":"https://avatars.githubusercontent.com/u/538057?v=4"},"tags":["freecad","autodesk","news"],"image":"./og-starhistory.png","draft":false},"prevItem":{"title":"When your Definition of Done is a barrier to contributors (and other reasons working with first-timers is hard)","permalink":"/blog/contribution-barriers"},"nextItem":{"title":"It\u2019s Time to Dream Big \u2026 and Build: The future of FreeCAD + the first ever FreeCAD Day at FOSDEM","permalink":"/blog/dream-big"}},"content":"When Autodesk changed their license for Fusion 360 in September of 2020 there was a collective scream from the user community. Hobbyists, YouTubers, and makers felt betrayed. Now, after more than two years, we can see the effect. Many of those people left Fusion and never looked back.\\n\\n\\n\\n>>\u201c\\t\u2018I have altered the deal. Pray I do not alter it further.\u2019\\n>>\\t\u2014 Darth Vader\\n>\\n>If that\u2019s how you\u2019re going to treat the hobbyists, then goodbye forever to Fusion 360.\u201d\\n>\u2014 [solarguy2003](https://www.autodesk.com/products/fusion-360/blog/changes-to-fusion-360-for-personal-use/#comment-11741)\\n\\nOver two years ago [Autodesk imposed a number of new limitations on its free non-commercial-use license for Fusion 360](https://www.autodesk.com/products/fusion-360/blog/changes-to-fusion-360-for-personal-use/), primarily impacting hobbyist and casual users: project storage was limited, exports to a number of (critical) file types were no longer offered, and support for CAM was drastically cut back, among other restrictions. These changes felt like a slap in the face, with some members deleting their Fusion 360 accounts in protest (whether or not they were affected by the new limitations).\\n\\n### The proprietary bait and switch\\nThe changes to the license for Fusion 360 for Personal Use were a perfect illustration of the risk of making use of \u201cfree as in beer\u201d software. Many users felt betrayed and frustrated at the new limitations:\\n\\n> \u201cThe file export limitations in particular are crippling. No .step? .dxf? No extensions??? I can\'t even buy stress simulation credits? \u2026 yikes.\u201d\\n> \u2014 [raynr on Hacker News](https://news.ycombinator.com/item?id=24496171)\\n\\nSome users were not surprised, saying it was inevitable that the company would seek to monetize more of their product, even suggesting that the Fusion 360 license had been overly generous to begin with. This take undermines the exchange of benefits that takes place between vendors of free software and the communities that spring up around it:\\n\\n\u201cThink of the tens of millions of man-hours that have been invested into forum posts helping users, developing plugins, courses, YouTube videos, and Makerspace workshops that could have instead gone into making open source tools like KiCAD, OpenSCAD, pycam, etc better.\\n\\n>\\"All that work done by hobbyists, for free, helping Autodesk dominate the market in low-end CAD/CAM software.\u201d\\n>\u2014 [sfdsfsdfdsf on Hackaday.com](https://hackaday.com/2020/09/16/autodesk-announces-major-changes-to-fusion-360-personal-use-license-terms/#comment-6278789)\\n\\nWhile Autodesk maintained they were still committed to \u201cdemocratizing design for everyone,\u201d the community didn\u2019t buy it, seeing it as a bid to squeeze money out of hobbyist users after riding their coattails to market domination. As one disappointed user commented:\\n\\n\u201c... you showed that you prefer to spend money to block existing features of your software instead of improving it with new paid features. That\u2019s an indicator that you don\u2019t care about the product itself anymore, but that you are just trying to extract the maximum money out of your current users instead.\u201d\u2014 [streakycobra on Hacker News](https://news.ycombinator.com/item?id=24498013)\\n\\n### So where did disgruntled Fusion users go?\\nFusion users asked, \u201cWhat can we use instead?\u201d and the overwhelming sentiment was in favor of supporting free and open source projects that can\u2019t be bought out or taken away.\\n\\nAs a longtime contributor to FreeCAD I was happy to see it suggested often. The effect can be seen clearly in FreeCAD\u2019s [GitHub star history](https://star-history.com/#freecad/freecad&Date): the count has more than tripled since September 2020.\\n\\n![github star history](./image3.png)\\n\\nCaption: You can see a dramatic 30% star growth after Autodesk\u2019s controversial changes\\n\\nThe spike in followers for [@FreeCADNews](https://twitter.com/freecadnews) tells a story too:\\n\\n![twitter analytics](./image1.png)\\n\\n\\nAnd here\u2019s the project\u2019s [growth in contributions](https://github.com/FreeCAD/FreeCAD/graphs/contributors):\\n\\n![contribution growth](./image2.png)\\n\\nIn the 2+ years since Autodesk changed the Fusion 360 license, new communities around FreeCAD have sprung up on [LinkedIn](https://www.linkedin.com/groups/4295230/), [Reddit](https://www.reddit.com/r/FreeCAD/), and [Facebook](https://facebook.com/FreeCAD/)\u2014all with over 3,000 members.\\n\\nWe know that one of the tradeoffs with FOSS is that sometimes you might need to roll up your sleeves and contribute (time or money) towards the features and fixes you want to see. It\u2019s gratifying to see this growing community getting involved to continue developing FreeCAD into a viable Fusion alternative, without the bait-and-switch risk of proprietary solutions.\\n\\n### Where to from here?\\nI\u2019m now working full time on Ondsel, built on top of FreeCAD. While Ondsel\u2019s product set is still being defined, my vision is to improve on the FreeCAD UI to make it more accessible for non-software engineers and build the collaborative features that small businesses and enterprises can benefit from\u2014now with the resources of full-time development talent. With open core, the business model is to [monetize features based on who will use them](https://opencoreventures.com/blog/2023-01-open-core-standard-pricing-model/), with the core product remaining free and open to all. A strong core is integral to Ondsel\u2019s success, as the core features are often an onramp for casual or hobby users who grow into businesses of their own and require different features as they scale. Having a solid and active open source ecosystem around it is vital to actually democratizing design for everyone. In the coming months I\u2019ll be hiring engineers to help define this vision and build it with me, but in the meantime I [would love to hear from you](https://github.com/orgs/Ondsel-Development/discussions/1) about what you\u2019d like to see from FreeCAD and Ondsel in the future.\\n\\n\\n<details>\\n  <summary>Note...</summary>\\n  <div>\\n    <div>I\u2019m Brad Collette, longtime FreeCAD contributor and CTO of Ondsel, a new open core company built on top of FreeCAD. Ondsel helps you share useful aspects of your solid models without giving away your designs. We\u2019re working on improving collaboration and feature accessibility and integrating with your existing tools. You can read more about my vision for FreeCAD and Ondsel <a href=\\"https://opencoreventures.com/blog/2023-01-ondsel-freecad-launch/\\">here</a>\\n    </div>\\n<br/>\\n  </div>\\n</details>"},{"id":"dream-big","metadata":{"permalink":"/blog/dream-big","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-01-26-fosdem.md","source":"@site/blog/2023-01-26-fosdem.md","title":"It\u2019s Time to Dream Big \u2026 and Build: The future of FreeCAD + the first ever FreeCAD Day at FOSDEM","description":"Things are changing","date":"2023-01-26T00:00:00.000Z","formattedDate":"January 26, 2023","tags":[{"label":"freecad","permalink":"/blog/tags/freecad"},{"label":"fosdem","permalink":"/blog/tags/fosdem"},{"label":"news","permalink":"/blog/tags/news"}],"readingTime":3.05,"hasTruncateMarker":false,"authors":[{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://avatars.githubusercontent.com/u/538057?v=4","imageURL":"https://avatars.githubusercontent.com/u/538057?v=4"}],"frontMatter":{"slug":"dream-big","title":"It\u2019s Time to Dream Big \u2026 and Build: The future of FreeCAD + the first ever FreeCAD Day at FOSDEM","authors":{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://avatars.githubusercontent.com/u/538057?v=4","imageURL":"https://avatars.githubusercontent.com/u/538057?v=4"},"tags":["freecad","fosdem","news"],"image":"/img/Ondsel_OpenGraph.jpg"},"prevItem":{"title":"Autodesk has increased FreeCAD adoption by more than 30%","permalink":"/blog/freecad-adoption"},"nextItem":{"title":"Hello world!","permalink":"/blog/hello-world"}},"content":"## Things are changing\\nOn August 17, 2022 the FreeCAD community celebrated its 20th anniversary as an open source project. That was an important milestone \u2026 and it passed with hardly anyone noticing. There was another important development last year and it barely got any more attention, even though it was far more consequential.\\n\\nI\'m referring to the creation of the FPA: FreeCAD Project Association. The FPA is a legal entity whose mission is to advance and protect the FreeCAD project. Besides being able to receive donations and pay for services, the FPA has a formal membership and decision making structure and this matters.\\n\\n## FreeCAD is changing\\nFor many years the FreeCAD project operated as a loose confederacy of core developers.  Decisions were made by consensus. Development moved forward when someone had an itch to scratch and the project philosophy was, \\"It\'s done when it\'s done.\\" That kind of loose government served the project pretty well. Until it didn\'t.\\n\\nAs the number of developers grew and the codebase got larger, consensus was harder to reach. Some problems defied consensus altogether. Too often, it felt like nobody was steering the ship. Many people wanted to see a clearer roadmap. They wanted leadership to address those thorny issues. Without a roadmap it was too risky for commercial companies to build around FreeCAD. Without leadership, there was no confidence that big problems would be addressed and industrial users were unwilling to adopt FreeCAD for mission-critical use.\\n\\n## Introducing the FPA\\nThe FPA was launched with modest goals. The founders wanted to avoid a heavy-handed dictatorial style. They want to encourage the kind of collaboration and consensus that has made the project productive and fun for two decades. They also recognized that FreeCAD is maturing as a project and some formal structure is necessary. I was honored to be part of that process and deeply impressed with the wisdom and care that the founders took to balance these interests.\\n\\nWhile the FPA is still finding its footing, it has already started taking steps that should have everyone excited.\\n\\nFirst, the FPA has money and the willingness to fund development. With it, they can encourage focused effort in areas where organic interest hasn\'t emerged.\\n\\nEven more importantly, the FPA is working to get developers together in the same room. Zoom, email, and issue trackers are the tools we live with and they work well for day-to-day operations. But there\'s nothing like face-to-face meetings for building trust, resolving conflict, and making long term plans. The ability to work face-to-face is one area where commercial development has a clear advantage over open source software. The FPA recognizes this and is taking steps to change it.\\n\\n## FreeCAD Day at FOSDEM\\nThe first ever \'[FreeCAD Day](https://blog.freecad.org/2023/01/04/freecad-meeting-day-2023/)\' will be held prior to FOSDEM on February 2, 2023. The day will be organized as an _unconference_. People attending the event will propose and decide what to do on premises. There will be plenty of opportunities for side discussions.\\n\\nFOSDEM brings together developers from hundreds of open source projects. It provides a fantastic opportunity to discuss collaboration opportunities with other projects, learn from their successes and from their mistakes, and meet like-minded folks.\\n\\n## Ondsel in the room\\nThe dream of building a commercial company around FreeCAD has been around for a long time. It\'s one way that developers could build not just a world-class CAD solution but their own careers. Now that Ondsel is finally launched as an open core company we are excited to partner with the FPA and the FreeCAD community at FreeCAD Day 1.0. We look forward to meeting, collaborating, dreaming, and building great things together."},{"id":"hello-world","metadata":{"permalink":"/blog/hello-world","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-01-03-Hello-world.md","source":"@site/blog/2023-01-03-Hello-world.md","title":"Hello world!","description":"Ondsel is Launched!","date":"2023-01-03T00:00:00.000Z","formattedDate":"January 3, 2023","tags":[{"label":"hola","permalink":"/blog/tags/hola"},{"label":"opencoreventures","permalink":"/blog/tags/opencoreventures"},{"label":"news","permalink":"/blog/tags/news"}],"readingTime":0.585,"hasTruncateMarker":false,"authors":[{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://avatars.githubusercontent.com/u/538057?v=4","imageURL":"https://avatars.githubusercontent.com/u/538057?v=4"}],"frontMatter":{"slug":"hello-world","title":"Hello world!","authors":{"name":"Brad Collette","title":"Ondsel Core Team","url":"https://github.com/sliptonic","image_url":"https://avatars.githubusercontent.com/u/538057?v=4","imageURL":"https://avatars.githubusercontent.com/u/538057?v=4"},"tags":["hola","opencoreventures","news"],"image":"/img/Ondsel_OpenGraph.jpg"},"prevItem":{"title":"It\u2019s Time to Dream Big \u2026 and Build: The future of FreeCAD + the first ever FreeCAD Day at FOSDEM","permalink":"/blog/dream-big"}},"content":"Ondsel is Launched!\\n\\nTechnically, we started life at the beginning of January 2023.  The last few weeks have had us busy with the logistics of launching; Getting a website up, activating our internal tools, and figuring out how we fit into the greater FreeCAD ecosystem. Those details are done so it\'s time to start talking about the opportunity we have.\\n\\nThe best place to start is [OpenCoreVenture](https://opencoreventures.com/)\'s official announcement [post about Ondsel](https://opencoreventures.com/blog/2023-01-ondsel-freecad-launch/)\\n\\nIn the coming weeks and months we\'ll use this blog to discuss where we\'re going and why we think it matters.  You can follow us here or on [Twitter](https://twitter.com/ondsel) or [LinkedIn](https://linkedin.com/company/ondsel)\\nWe\'re also [building our team](../../careers) and looking for passionate and talented people.\\n\\nJoin Us!"}]}')}}]);